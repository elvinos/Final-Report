%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2408 788
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2408 788
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: VDWCFC+Avenir-Light
%!FontType1-1.0: VDWCFC+Avenir-Light 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /VDWCFC+Avenir-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /e put
dup 35 /a put
dup 36 /d put
dup 37 /space put
dup 38 /M put
dup 39 /s put
dup 40 /t put
dup 41 /r put
dup 42 /S put
dup 43 /D put
dup 44 /c put
dup 45 /o put
dup 46 /n put
dup 47 /y put
dup 48 /F put
dup 49 /i put
dup 50 /f put
dup 51 /B put
dup 52 /w put
dup 53 /T put
dup 54 /p put
dup 55 /l put
dup 56 /g put
dup 57 /m put
dup 58 /h put
dup 59 /j put
dup 60 /C put
dup 61 /k put
dup 62 /b put
dup 63 /A put
dup 64 /question put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -167 1 index div -250 2 index div 1000 3 index div 936 5 -1 roll div]cvx def
/sfnts [<













003B001E000000122BBF0016005C0049003D002B001E000000122B00BA001C000400112BB8001120457D691844B800002B00BA0001000400022B01BA0005000400022B01BE0005005C0049003D002B001C00082BBE000600730059004D0037001C00082BBE000700660059003D002B001C00082BBE000800540049003D002B001C00082B00BE000100660059003D002B001C00082BBE00020083006C004D0037002400082BBE000300730059004D0037001C00082BBE0004005C0049003D002B001C00082B00BA0009000400072BB8000020457D69184400
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/question 2 def
/A 3 def
/B 4 def
/C 5 def
/D 6 def
/F 7 def
/M 8 def
/R 9 def
/S 10 def
/T 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/f 17 def
/g 18 def
/h 19 def
/i 20 def
/j 21 def
/k 22 def
/l 23 def
/m 24 def
/n 25 def
/o 26 def
/p 27 def
/r 28 def
/s 29 def
/t 30 def
/w 31 def
/y 32 def
/fl 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-167 -250 1000 936}def
/UniqueID 4509853 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF2518CCC991B61C48DB35908FD3D05822C7CCA78C36E0BA0F3853F1F2BE1CF20C1CC0635323ED515D9E2AE69DED9210D93767E03467861C555E3C8D514AB33883E5F1BAF4840602F9B8717E2595950C20F5B8F12A4789ABC0EDA2E6A0BD42703ADFCC4728A3F335DFDC7B2641572953A9E6FFDF979567E79BFDDCDC38666040398F95AD417C9FE4EFFE11A9D560AC25C77C4470F26CE7FDBFA45B9D112C0058FC479E1061BD05CA2E2AA157A0C70EF90EBC3292BCB06113F331200F2DB95CEAB6D653576FEEC57226F4B53B9CB6422A2C9D148CCAD8003FCACC5A18ADFAE8CC1E369A10E31DD1E9BAD750DD8FBD7F057F737A87702A47DF3938F1432A919AB1DE97C2C56CE178C3262468B96247AE43DFD6446306B4674C407FBBFF3A8DE3090DF35F5C338312EF140B9945DB364ADE1BDCF2672635C01CCCD36A2797BC744800087580B4B6BD2BB713E4144AC1A31577EE5A2CC1B0B4BCABC712DC0F4E94125249F0F1246672667AE8756DF874E0258B1EF09364B76A5D29F9701FA06EDDB77C200648F94AC95EB2EF0CBBB1D302254CCBA51884E24AEFB174CF3048D102F01794EBDFC7FD2E9B2B17B3ED7822A480160B5CDF68773DC9D8992ECCD8E186BFDE264FC1777D767B142C46698AD04CB714B32D410A533720FA0896C6A6AF27C07FAB1B49DE2858F90968B0DC91879D4C90151A94F0ED4FCBA6FAFAFFF0F2F9DB67A554E887B

58419363A6D6E4D0C2D360FA3E98DD321B5066376B4E4EB61E92B96443FD828BA03A20A8931AAE613EEDAB222DE44BAE905E427120D2C6DC4C604AD6C840D688E26CA5FBDB17C432BB3D166E2BA0C4CB44727F285F4D17F8D1C3260671126C7D4737C810B280F391CDCE7573C155856CB69AF39915C9F4315AE61FEEBFCD7EF36424D08C26F7CA050815ECEB60C790C95D2DD7C6B0E06CD095F4C0055175B2BDBD0C05A51188074891A54A5DE73D4FD04E78760B1706F802C81BBDD49121AC05FB51E4758DD4B4234FFB580F63392B1FC508833B6BDB7F5DE3AF583C452A3BEAE1EE5C13449D3A42E507EB44512002E4629F593A2F88B33388409743342EB70643127021C72696FCB65871AB60471AA584E03DDA21E6B85251404D8DE21196C2232DFA4A5A9CE6C4CFE2023566A140594120AC6F122288A91AB311E4624C727CD7DE0F9922B6A96816B75FCD9614F7893BAC56BC6C4E8157BE066908ECFA1683356E71BE730012238CF271476D8E51A923D0B97104785125B70BC266DBE48A4FF6EDA272477597F06F521BAC7E272CC4E5BA8A1797201A89E71FA300D251B5C06A2DA3AF7ABAD25C9F4A9B2B4165C22ADF6DAFA405B9F4AF338299351B7FA4CB5FD6D863926F64C8D3303BF2BEABC8A2A4B587E34EFD74D75DB34D83D1343B6124F8077B189ECF8DA762D0DE0F3C9C966A7E2670FB24D554C2D5438C5205C3218CB7D802E5D14D1E606CDAB3AE945AD58642FA38F591C5B128823DB6062A44C33A19B703F9E8717A7050DCE8AB7A7ACDCB3C9FA996DE7FCF9B9849F30130B59B54DFDAD4E73DF2BA4A8D93A65661F0F9F3729CDD2BD5FC6DA779DE7ADE30CA36E022E4C1C48040046EA33DA5F80A6841CD958EC8619F2F2B6115B57EA3F7B7066CD4625E9AE97C0ADA4886281822B0106682A19332ED3C91F003508CF864702AFC7DFB59457AC345368148C54AAC97EB6F6D4AFA124D79850C69E90230AF7EB395D3C0924E4B36F3BAED3C6F93153BAB27016C94B38BD095C2EAFCE540DBBC7E19F05D72E5A1C1582A6667EC32AA5102BB6D37943BB063974F13130F8E0BDF15796AB1DB31724E23A589EA99C4AA61DD75A24ADC449A5DBEF422B796E5F29BC417FEEF30EE2B42395D662EE41C6E143F8012325B2C4650A1B1D4F7B77F3A2E5D5E1C040A3288507BE1754DAEB41ED60B2AE81B8715C3FD3152369F90B4FE0528CAADC3E1B56940F301C225BC7E247FF6ED2C56284F016F8C5709849A8F8F7351FB94069850D915324B204D07C8AF7620D30760C45F246A599A6F456FD97F6E5D3942C1CAF7D52FFE0580FEF35C46572C4B5856B9309843EAB05D7685BC186DF49F7BEAD60AC551E16AE336FF5619E2C3A9F2D78321D75BDE76A60EA44C02CE0BCC42307A9AAAF0CE01454BA78715B12E7BC66BABC955901FAAD3418E7D44C5DD
5E11B3DC0FD88A0FCF0F41A21F2EB32ACB9A628C12EDB57777724999355A5FD1AF813ACDF165B1BDE1DD30A622EE6F248C24CC2D9B5D2747D90D83A7915F5127400B72AA8BCD97E578409E466A8100829DAEE84858D1EE5B3F589635BE90BF3C513B29EE6FCEF1D419BD3463F91B94F9B238D2B911B765F7FAB3804905737738D75072EE093EF00AB04B4BA429C45E25ED3AEF3DFCAACE79D4F43530DCF02725E65DF862AC840407406D11EC2CEF0FEF44746F33F9A909AAFBCDA3D65DE2A9A70BFCC49ED99F3213A4E8DE4DEB428B54145645FAF1981FCB17C1CDD2D49BE8C27899593217C083DEBCFCF08884C77E2CA335F54D14C69EDAAF93D7CBB8FBE76939F7DB06BEFF9BC07FD1B9CFEF0226C36F8A3AE9E1D2926A92707C55CCEF74216F1156FF015764B7025288CB136BEFDD2A954283125166BA368ACA0B94C3EA7C33F706725DCF5407E3F171A5656D45ACD3E5DBF7CEC9ECF973605BD8712379E9432AF8D33E1A23C46237B5953DB35225DC3EFB3C0D710081B4D7715920927E1CC0B6E0E8A953081CD3EF510C26DC8B0F360119D24379EDC9C65043346E775315F6433DDF02A2A4DC5A782CCDA9EFBA4EFB3935C658F48F68B1751FD61487860CF416933470F4F0A0E29AA16575B304E9FB241252508393C8FBBA5843C960CC08C0049D1AA63805119A833925A56595056C6A80B997DBE0F62A91073F2642EE3A24700A59CE2B65721048B77770C625C2ACF1A4F82426CB299375F62107A7E8F215ED913A2818313C1BD112929540527B4478369BA29BB514174C205D4E280BBFD051E89370D58969A8D5ABF6CCD2D34A2B58B1F6E091D8B6BC5EA994CE59031E712EC16EC577629B4B861B84727F146E5C4E029AF9B5A6D06C7D287D6FD9585319344928AA5CDCCDAABCFAC8165058C8123D4774A96D62B912C3AE9C4EB98092C69CE829BDC0D4504EA266AF10A9961D11A665967F909F80CC7B386EB3C18923160B37F0AC01D40F2BB8DB080119712EDDD10AF0C13B15FB1224007A8D51B9599F67830BFD42A9CBBCA12132658F4E1D4E69FC417372A0C21B94CCFAD60E6C8FF5541B4FE020AE50CBBE225A3B24AA53C25A6AD2E03327CA38A16EDFD6D01CB37E8500A68CFC6A30E0609DF5D16AB3612C61CDA726CD1586DFAFDFB5555EC0C4E81E4EA5279D9E893BCFC33E48714B27827D6F23664732F9AD594C2A6113C59AC63CD423EFF13597F861A315B005D7BAE68A804B2AF3C8BF20ABB819B509F56AE6944E52F420DBFA102F69CF32E81DDD2D554F8CB2470437AB1DD7DB79309457B262FCCA7EB85ACE8826A0B45D6B33BEA2A941CB4DF802FF2D7D851F4D3F83A6755AD19416247D6DBD096F552401F91FF55B978ABF9B12B5075F80815C6F87E0B0936341A8FBE49CBF206EA41823ACB4853336A0124100552834AAE204AE76AD
7EF96D4D1EAA47288A89FA90BD4FA8C61620C216EA8BD2AA823B3B49695CBA11E907BC1879A4E9300F1525C9A940020969DBD3F1484C7EDC05F64648B9FA69AEAD90CDC66FE070FB385F2B7A436B676D35F4060242F3FE18D0B6F3778B98E3B4C779E4D2DDC03D597B4B2ACAF31DF1BB31F45A99AD7277A3C1F5F59670F40173E9445380F1228B6FB7178DD13A5EE8D9218E106EA89CC866F2EB9506870E0AFB3938618C3C96ECB2193083FC3B6ABD7ED788DE9547A4FBC00F962E091A009D00C4F27D137064C44D27EF59FE753212A26B6909E8DA463E976D59437C78C779178F4703D8FE530654AF2BD3296C6408B4253ACFC6C36FD81566A07FBB15790800E4FE1127FE829B062BE2D39F66F3AEED679559DFF6490DCEBEF4B4F68CC4F60369D47F2BBECC8386FC34D6A162E6352EDDE8678B1232185ABDFFCBAFE032125830EEB8F81ABF96BEB4407BF388AE1E520F2534398122EE71D95578F2394F6E83689E4C4E20892F866DFAC6D4839F1C36DE70F7F50868AFF0BD10B35CA42EBEFB1FA225A6CEDF70EF367F02147C0CB785513ED778E255EEB90024A879BAF103BECAAAA762D2E21D90FD42B7DC0659C49DF7F677AB35D18CAEC4324A51FE75CB52586FA370A4533441CDBC9C50AA841BF1A0FA79EF93FD4C80D639E8D6C25183A6B35052DBA9A7057EE8B703FA43930DBE84A40009421B8528A28EAF742504E2527EA65CB110B682DAC65BBBCC0C75B110DCAD4D1B2EA8DB385E3DCC13C34BCBD328BC49194AF4F7627F5052F6E1A227E2AC4DF30668874DC7817D5D9ABE8E158AB205E10539E77B037201C2BAAB6AF40043CBFB3FF57A88E6723CF62C5BDBC1A07A4529CDF77B60519E86AE746E14AFF5A8BF9D0DDDF882F4F9268E0895CC0F1C517F2F7D76F6A48C235751E4361042F053048F6882CD53D1281D18AD222963F2C5A6459E2571419059CF591CB8EB11E727F928DE42B5CF0C2AE804D4E4DF883F32B29616E19649796C765CC3A74BB57F7DF55441664E09AE7870B608FF5FA159A7A5FEFACDEFFED9D2C32B058FE40D67A78D8351BC64B7AF6FC5912256AB4B79587E733AD139C6F0AE89E95F8B91AAE7D0F8A7ACB935EC9F201CD2F256796A1A481C23DB0212A6CA913C7EC3AE9F12D7B678E9E4DCF75F9B61B9536EA1A2EE9EBD3F3F2FC50E99FC60C5C3E5807AD7036E6D3A70AFD3066D7469723CD5815E02A654B7EFB6775D0A3BDF37E9FC371CE2D9B8B2E748D2744D867CBC38BD576F1500953637ADE1727330629A85623AB58000850A3D6224DC7FBC446CB4933157E68B2F75EB60B5513984B74FA452DFFEC6D21D86A0C1A0054A6797AF820F8D43B0462E9BAC5E95E281BA50AE349C456B5E23B6844CF7507C75BB83A9E49BAD241240CC1E4FCEA0E53C71666096AB4E4C92A51DEFCC51FBA038F0861DA0C0EE7C27
0E5A27D94BBBC93765C582A5E1FF1C79BB42FEDEBEF8C038BEC2FF3B70F1873440E6F4C86A77375C80182419DC1278797809554E75DF10B1CD7D831F8BAA1187E18217E22F960E8E2378FACC8C3683FDB8E2D77E1879B09EAFF4C88159500B8476737A802522DB1DAE107FE73A595A78FA1F156EBF3813A224BE69788B2F04E4B9F3237C32F7A30622302F175F5B7EC636AACA1CCA4D39A306741834A7767FDAD342FD3D69A7170070D1B77FF57BB3819E5EFAAAB44056528FC8E3A62E699215315C07B96D8CC94F2E1CB93987C5508205B1236BBAFD896DF3479BD7B3FD60E27C3E2A55F3C5CB582F01DD11D2E410DD0EF404901F52FF4EDE68EFB141EDD18A9945E2D952005A03A27CC0F75235483D30F8105680C745350934CB62FB909343626855C744678CC5F72E900A505F078C0F07CDB69CA0303B4C362B6B378975DFD30B3A33F95B49BACF2E7FA1D8A579C61944B20310264640D47E9F041CFE3E5E7D6D345ABAEF93D2118022D2788519F349CD5D336C01123B02AC5CCE6D0CB9DE1017554CA408A341EDE729161754F716229E49380D9D09987B8A10967663B25723A1B0CAC0E601831FC2C31E569700B5E06F831921CD40C8239984EBA2E3266DB3DC6657B78D085D68CF25F8259F731951A19603819AC31C877ED2C7C934DAF0B8817BBBB7396C08E39FFD099E490795DA9BFEC0F388793385E742A3B3EC248ADCC4BAEA273BE3D7770E978FD040887EDD30B2C635242D4BB2DA3C7D8A8F42692E8E2BEF8891822E28A567E4D34FFB06F9B0D7435CF69987890C0E2DB459DE10C96C9305D82322DF15153010747D5B06956FAD00B9A30D8B7CEDA32B26D0DD60DC65903DBB90ED83C2B64E3AFAF543FB89AAA5B9FCA2E427BCC74C6FDF35964CFD8F38DC76A21525B72036C6D3DC6484E1C74C8FFFBA329779DF5D279BEF38CBB9C5BDC5E2CE91D406879C3F33BBAFD124A49D264FAFD3371A369975169C40251D345C747B91A17D894D51D50E35A33608FFD8281310F7089491C4A060212EEC7E9381F6080B7F6586BE52A4B3B0E07E810224B12A1C026890466EB52611F597601135FE3F4E347630B863BB19D37AAB0767408E56AB785B05AC61B96804996DC5AB7E7E42CE3041CBF596DE857E1DDC3E6179424CC944C922FF883C1319E6ACAAE4A83A2407D1CF12E1CB2BA3A373A7E4BB8C2C1C682AE10EFDA30A8524C721CE282020837CCFEAE2A1E586344F3A5FD3EEFEF45DEEBEC310A89911D844F93168BA3C574EADB7F7A33FB44A0EB231BCC83EF18229C89EB6565F8AC92288459E9AEAB0732A964F8EC5EFD2E48F6494B43D5863029A0E07AB222EFF4E6B759D89B1410AD05D9721757F1487277258F58A406D3D2D03D04ED1BA0B57D01E80F9BC1B92B978001092C3FE9CD359EBE8A030B1CF71064F93AA735C9806D5BAB5E161

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/VDWCFC+Avenir-Light cguidfix
/F1.1/VDWCFC+Avenir-Light renmfont
%RBIBeginFontSubset: RMVTLD+Avenir-LightOblique
%!FontType1-1.0: RMVTLD+Avenir-LightOblique 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /RMVTLD+Avenir-LightOblique def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /y put
dup 34 /e put
dup 35 /s put
dup 36 /n put
dup 37 /o put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -167 1 index div -250 2 index div 1038 3 index div 936 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/e 1 def
/n 2 def
/o 3 def
/s 4 def
/y 5 def
/fl 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-167 -250 1038 936}def
/UniqueID 4146745 def
currentdict currentfile eexec

14163DD4926E0528BFFCFB01EC4D1198C63D4BDEC7458773F4409D5211FAD2C84E96ABFA4BBA49885D3EEAEFC81EA1E2A05E1E18C5FBAB9BBB7B0B8AD739C093486F6DFF15FD2CAE26CED35643832B9977309E49C932FC292BE9BA9D5BFE340CC0A9A7E489601C601AC87CE3AB3D91C3D25BC74D8C4E0BF21C981EB07A81FD14D0D1200FEE644A45DBD721B0593822D08317EF2822C432CF9F152CDC920C98E91A238308003EB955D6F0B82DFB038A9BD589D9433B247E88626E677BF5DDCB70AECBC1FB74D5B7B2C3EF6E1F1D8B304E99302911522A09B7427900F269E6584D657C840643A0132B22EE7B9E643D7C6A0CA15E6683353A4F6B262A01A2DC9AF24A73BB547501D473C1A4D67EC03E77A279529AC2D07057AD586D14CB9132D7751858012703543B314D660D9BAC78988B0CAE3D1684B1032624FA92E040EC8FD1510E5699127A9907A1A809786434D8D80A6EB962191C918904447A7AE985A40413706A8DEEEF68BCD351D9702F962C856D6990B8F7BD0852326D81B653705CF9D354A6D44335976D799C998284852AE8EF7377F44E2631B42CCFF64434D194BABB651B3E1A204B74687C3BECDF1BBF86DEFD0141001F500699C6E3662D281195F7DB4DBCD57FDAC150A9905CBF4F1DF44FD35D423AC56DD710734495D8C534E6F933112D6BDAEFE693927493D9AFA03112154FAE36343EA9C3003052447381C72C18E88CEC5CC706E4EB114149406C2A0B82D332F2096373722C6FBE35190751D0E4839695CCA316B8A76B5A29708A32DBE0E942C8C5C282D3026EE21B0BFC351CC4EE0562C71B050F9B463C17AD443AC78CB636CD05801F100ABD946539B91519B27BAA60DA8243783E91AB5C0B092E210C8DD83DE30F27F3897FE68D3F549449224452A478934473463175D88D99E38AFFCBA668966391CB3B1B19DE8E633B9D1039F2A40010E49CDC8ACC1B68C00D4FC8BDF6062796C6DDBE0B1F6EEB6556E47263CACC660C804388CAB8640EDDD87C80F35F26F56EEEE326BAE452524E6DFA8B1B0C944E45F74006B79F316DEF12221E169B8BB84D6B0BDE2F3825AD66B82098A6F512629E0093F8D7D848914B114E733A9D62B225F9996BB4982C5712FBAA813CB7D60567F556EA460CA05491A4EC163178DB0CC6C391345BBC119F260A361DCCDE23814429D94AC728047E09DD0892299210D8D96FCA354880931EAFC5400684C09FC95D6E45660EE5D6D57DBF61117259E5CF0ADF43158CC946397B58A10B265F15E3DAFAA743C8F51AA2B9B2F4987EA8B59E25AFE34AFF175F4D7F34C1450F23E35D1B53CC0F016BB8675DCC305AD966C5D58A82134564903202E8FB900680D235761A1629BFE466E8A213CC3045D2D00D900EC8DBFF32508D02E6B3B4F22277CEA7F08DF9565D113BF98E15E59CC54F98
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/RMVTLD+Avenir-LightOblique cguidfix
/F2.1/RMVTLD+Avenir-LightOblique renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.83529413 0.87450981 0.89803922 sc
q
0 748.01501 m
0 770.09808 17.892845 788 39.98592 788 c
482.01407 788 l
504.09769 788 522 770.10144 522 748.01501 c
522 639.98499 l
522 617.90192 504.10715 600 482.01407 600 c
39.98592 600 l
17.902306 600 0 617.89856 0 639.98499 c
0 748.01501 l
h
0 748.01501 m
W*
0 0 2408 788 rc
-10 798 m
532 798 l
532 590 l
-10 590 l
h
f
Q
/Cs2 SC
0 0 0 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 78 776 cm
/F1.1[ 30 0 0 -30 0 0]sf
8.0749998 30 m
(!"#$%&#'\("\)%)[ 17.790000 16.680000 15.570000 18.330000 7.800000 26.670000 15.570000 12.780000 9.990000 16.680000 9.990000 0.000000 ] xS
24.754999 71 m
(*\(#\)\(%+#\(")[ 16.680000 9.990000 15.570000 9.990000 9.990000 7.800000 22.230000 15.570000 9.990000 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0.83529413 0.87450981 0.89803922 sc
2 0 0 -2 1103.3447 694 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.60000002 i
/Cs1 SC
0.55686277 0.23137255 0.27450982 sc
q
1162.8169 714.82806 m
1182.0735 690.82806 l
1162.8169 666.82806 l
1185.2339 666.82806 l
1230.8169 690.82806 l
1182.0735 714.82806 l
1162.8169 714.82806 l
h
1162.8169 714.82806 m
W*
0 0 2408 788 rc
1152.8169 724.82806 m
1240.8169 724.82806 l
1240.8169 656.82806 l
1152.8169 656.82806 l
h
f
Q
3 w
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
2 0 0 -2 585.4823 566.66632 cm
0 49.82127 m
0 1.8683617 l
459.77841 0 l
459.77841 21.443224 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
1528 544 m
1504 524.74335 l
1480 544 l
1480 521.58301 l
1504 476 l
1528 524.74335 l
1528 544 l
h
1528 544 m
W*
0 0 2408 788 rc
1538 554 m
1538 466 l
1470 466 l
1470 554 l
h
f
Q
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
-2 0 0 -2 1256.6553 384 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
1197.1831 404.82803 m
1177.9265 380.82803 l
1197.1831 356.82803 l
1174.7661 356.82803 l
1129.1831 380.82803 l
1177.9265 404.82803 l
1197.1831 404.82803 l
h
1197.1831 404.82803 m
W*
0 0 2408 788 rc
1119.1831 346.82803 m
1207.1831 346.82803 l
1207.1831 414.82803 l
1119.1831 414.82803 l
h
f
Q
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
-2 0 0 -2 910.65533 390 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
851.18311 410.82803 m
831.92651 386.82803 l
851.18311 362.82803 l
828.76611 362.82803 l
783.18311 386.82803 l
831.92651 410.82803 l
851.18311 410.82803 l
h
851.18311 410.82803 m
W*
0 0 2408 788 rc
773.18311 352.82803 m
861.18311 352.82803 l
861.18311 420.82803 l
773.18311 420.82803 l
h
f
Q
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
2 0 0 -2 1735.3447 694 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
1794.8169 714.82806 m
1814.0735 690.82806 l
1794.8169 666.82806 l
1817.2339 666.82806 l
1862.8169 690.82806 l
1814.0735 714.82806 l
1794.8169 714.82806 l
h
1794.8169 714.82806 m
W*
0 0 2408 788 rc
1784.8169 724.82806 m
1872.8169 724.82806 l
1872.8169 656.82806 l
1784.8169 656.82806 l
h
f
Q
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
-2 0 0 -2 1902.6553 382 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
1843.1831 402.82803 m
1823.9265 378.82803 l
1843.1831 354.82803 l
1820.7661 354.82803 l
1775.1831 378.82803 l
1823.9265 402.82803 l
1843.1831 402.82803 l
h
1843.1831 402.82803 m
W*
0 0 2408 788 rc
1765.1831 344.82803 m
1853.1831 344.82803 l
1853.1831 412.82803 l
1765.1831 412.82803 l
h
f
Q
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
0 -2 -2 0 2138 604.65533 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
2158.8281 545.18311 m
2134.8281 525.92651 l
2110.8281 545.18311 l
2110.8281 522.76611 l
2134.8281 477.18314 l
2158.8281 525.92651 l
2158.8281 545.18311 l
h
2158.8281 545.18311 m
W*
0 0 2408 788 rc
2168.8281 555.18311 m
2168.8281 467.18314 l
2100.8281 467.18314 l
2100.8281 555.18311 l
h
f
Q
0.83529413 0.87450981 0.89803922 sc
q
0 0 2408 788 rc
0 -2 -2 0 1008 318.65533 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.55686277 0.23137255 0.27450982 sc
q
1028.828 259.18314 m
1004.8281 239.92648 l
980.82806 259.18314 l
980.82806 236.76614 l
1004.8281 191.18312 l
1028.828 239.92648 l
1028.828 259.18314 l
h
1028.828 259.18314 m
W*
0 0 2408 788 rc
1038.828 269.18314 m
1038.828 181.18312 l
970.82806 181.18312 l
970.82806 269.18314 l
h
f
Q
0.16470589 0.38431373 0.56078434 sc
q
602 744.01501 m
602 766.09808 619.90625 784 642.00165 784 c
1105.9984 784 l
1128.0907 784 1146 766.10144 1146 744.01501 c
1146 635.98499 l
1146 613.90192 1128.0938 596 1105.9984 596 c
642.00165 596 l
619.90936 596 602 613.89856 602 635.98499 c
602 744.01501 l
h
602 744.01501 m
W*
0 0 2408 788 rc
592 794 m
1156 794 l
1156 586 l
592 586 l
h
f
Q
/Cs2 SC
1 1 1 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 656 770 cm
/F1.1[ 30 0 0 -30 0 0]sf
1.38 30 m
(!"#$%*",-.$#\)/%)[ 17.790000 16.680000 15.570000 18.330000 7.800000 16.680000 16.680000 14.430000 17.820000 16.680000 18.330000 15.570000 9.990000 13.890000 0.000000 ] xS
35.865002 71 m
(*\(#\)\(%+#\("')[ 16.680000 9.990000 15.570000 9.990000 9.990000 7.800000 22.230000 15.570000 9.990000 16.680000 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0.83529413 0.87450981 0.89803922 sc
q
1228 744.01501 m
1228 766.09808 1245.9062 784 1268.0016 784 c
1731.9984 784 l
1754.0907 784 1772 766.10144 1772 744.01501 c
1772 635.98499 l
1772 613.90192 1754.0938 596 1731.9984 596 c
1268.0016 596 l
1245.9093 596 1228 613.89856 1228 635.98499 c
1228 744.01501 l
h
1228 744.01501 m
W*
0 0 2408 788 rc
1218 794 m
1782 794 l
1782 586 l
1218 586 l
h
f
Q
/Cs2 SC
0 0 0 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 1228 770 cm
/F1.1[ 30 0 0 -30 0 0]sf
34.029999 30 m
(01.$%+122"\)".,"%)[ 16.680000 7.200000 16.680000 18.330000 7.800000 22.230000 7.200000 8.340000 8.880000 16.680000 9.450000 16.680000 16.680000 14.430000 16.680000 0.000000 ] xS
4.7950001 71 m
(3"\(4"".%54-%+#\("')[ 18.900000 16.680000 9.990000 21.120000 16.680000 16.680000 16.680000 7.800000 13.890000 21.120000 17.820000 7.800000 22.230000 15.570000 9.990000 16.680000 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0.16470589 0.38431373 0.56078434 sc
q
1864 744.01501 m
1864 766.09808 1881.9062 784 1904.0016 784 c
2367.9983 784 l
2390.0906 784 2408 766.10144 2408 744.01501 c
2408 635.98499 l
2408 613.90192 2390.0938 596 2367.9983 596 c
1904.0016 596 l
1881.9093 596 1864 613.89856 1864 635.98499 c
1864 744.01501 l
h
1864 744.01501 m
W*
0 0 2408 788 rc
1854 794 m
2418 794 l
2418 586 l
1854 586 l
h
f
Q
/Cs2 SC
1 1 1 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 1884 770 cm
/F1.1[ 30 0 0 -30 0 0]sf
13.445 30 m
(*671\(%$#\(#%\(-%#718.%)[ 16.680000 18.330000 7.230000 7.200000 9.990000 7.800000 18.330000 15.570000 9.990000 15.570000 7.800000 9.990000 17.820000 7.800000 15.570000 7.230000 7.200000 18.330000 16.680000 0.000000 ] xS
30.635 71 m
($#/%#.$%9-.\(:%%%)[ 18.330000 15.570000 13.890000 7.800000 15.570000 16.680000 18.330000 7.800000 25.560000 17.820000 16.680000 10.020000 16.680000 7.800000 7.800000 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0.83529413 0.87450981 0.89803922 sc
q
1862 434.01501 m
1862 456.09811 1879.9062 474 1902.0016 474 c
2365.9983 474 l
2388.0906 474 2406 456.10144 2406 434.01501 c
2406 325.98499 l
2406 303.90189 2388.0938 286 2365.9983 286 c
1902.0016 286 l
1879.9093 286 1862 303.89856 1862 325.98499 c
1862 434.01501 l
h
1862 434.01501 m
W*
0 0 2408 788 rc
1852 484 m
2416 484 l
2416 276 l
1852 276 l
h
f
Q
/Cs2 SC
0 0 0 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 1900 454 cm
/F1.1[ 30 0 0 -30 0 0]sf
2.2650001 30 m
(*41\(,:%$#\(#%'671\('%)[ 16.680000 21.120000 7.200000 9.990000 14.430000 16.680000 7.800000 18.330000 15.570000 9.990000 15.570000 7.800000 12.780000 18.330000 7.230000 7.200000 9.990000 12.780000 0.000000 ] xS
63.360001 71 m
(#.$%;-1.)[ 15.570000 16.680000 18.330000 7.800000 7.200000 17.820000 7.200000 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0.16470589 0.38431373 0.56078434 sc
q
1230 436.01501 m
1230 458.09811 1247.9062 476 1270.0016 476 c
1733.9984 476 l
1756.0907 476 1774 458.10144 1774 436.01501 c
1774 327.98499 l
1774 305.90189 1756.0938 288 1733.9984 288 c
1270.0016 288 l
1247.9093 288 1230 305.89856 1230 327.98499 c
1230 436.01501 l
h
1230 436.01501 m
W*
0 0 2408 788 rc
1220 486 m
1784 486 l
1784 278 l
1220 278 l
h
f
Q
/Cs2 SC
1 1 1 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 1228 462 cm
/F1.1[ 30 0 0 -30 0 0]sf
28.735001 30 m
(<:",=%$#/'%41\(:%)[ 21.120000 16.680000 16.680000 14.430000 14.430000 7.800000 18.330000 15.570000 13.890000 12.780000 7.800000 21.120000 7.200000 10.020000 16.680000 0.000000 ] xS
90.714996 71 m
(9#'\("\)%)[ 25.560000 15.570000 12.780000 9.990000 16.680000 9.990000 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0.16470589 0.38431373 0.56078434 sc
q
394 408.00381 m
394 444.45251 423.56137 474 459.9837 474 c
716.0163 474 l
752.45807 474 782 444.44327 782 408.00381 c
782 375.99619 l
782 339.54749 752.43866 310 716.0163 310 c
459.9837 310 l
423.5419 310 394 339.55673 394 375.99619 c
394 408.00381 l
h
394 408.00381 m
W*
0 0 2408 788 rc
384 484 m
792 484 l
792 300 l
384 300 l
h
f
Q
/Cs2 SC
1 1 1 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 417.97058 450.55319 cm
/F1.1[ 24 0 0 -24 0 0]sf
3.2719412 24 m
(*:12\(%$#\("'%>#,=%)[ 13.344000 13.344000 5.760000 7.104000 7.992000 6.240000 14.664000 12.456000 7.992000 13.344000 10.224000 6.240000 14.664000 12.456000 11.544000 11.544000 0.000000 ] xS
45.019939 57 m
(-."%$#/)[ 14.256000 13.344000 13.344000 6.240000 14.664000 12.456000 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0.83529413 0.87450981 0.89803922 sc
q
732 148.01501 m
732 170.09811 749.90625 188 772.00165 188 c
1235.9984 188 l
1258.0907 188 1276 170.10146 1276 148.01501 c
1276 39.984989 l
1276 17.90189 1258.0938 0 1235.9984 0 c
772.00165 0 l
749.90936 0 732 17.89855 732 39.984989 c
732 148.01501 l
h
732 148.01501 m
W*
0 0 2408 788 rc
722 198 m
1286 198 l
1286 -10 l
722 -10 l
h
f
Q
/Cs2 SC
0 0 0 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 780 172 cm
/F1.1[ 30 0 0 -30 0 0]sf
48.029999 30 m
(*,#7"%#.$%)[ 16.680000 14.430000 15.570000 7.200000 16.680000 7.800000 15.570000 16.680000 18.330000 0.000000 ] xS
50.805 71 m
(<-9>1.")[ 21.120000 17.820000 25.560000 18.330000 7.200000 16.680000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.83529413 0.87450981 0.89803922 sc
2 0 0 -2 473.34467 696 cm
40.107727 1.5 m
0.82766581 1.5 l
S
Q
0.60000002 i
/Cs1 SC
0.55686277 0.23137255 0.27450982 sc
q
532.81689 716.82806 m
552.07349 692.82806 l
532.81689 668.82806 l
555.23389 668.82806 l
600.81689 692.82806 l
552.07349 716.82806 l
532.81689 716.82806 l
h
532.81689 716.82806 m
W*
0 0 2408 788 rc
522.81689 726.82806 m
610.81689 726.82806 l
610.81689 658.82806 l
522.81689 658.82806 l
h
f
Q
0 0.14901961 0.14901961 sc
q
888 386.46875 m
888 431.49722 924.49847 468 969.53223 468 c
1049.1655 468 l
1094.1945 468 1130.6976 431.50711 1130.6976 386.46875 c
1130.6976 386.46875 l
1130.6976 341.44028 1094.1992 304.9375 1049.1655 304.9375 c
969.53223 304.9375 l
924.50323 304.9375 888 341.43039 888 386.46875 c
888 386.46875 l
h
888 386.46875 m
W*
0 0 2408 788 rc
878 478 m
1140.6976 478 l
1140.6976 294.9375 l
878 294.9375 l
h
f
Q
/Cs2 SC
1 1 1 sc
0 i
q
0 0 2408 788 rc
2 0 0 -2 914 420 cm
/F1.1[ 24 0 0 -24 0 0]sf
14.448 24 m
(?718.@)[ 16.440000 5.784000 5.760000 14.664000 13.344000 0.000000 ] xS
0 0 0 sc
2 0 0 -2 1058 292 cm
/F2.1[ 24 0 0 -24 0 0]sf
0.16 24 m
(!"#)[ 11.112000 13.344000 0.000000 ] xS
2 0 0 -2 818 478 cm
0.2 24 m
($%)[ 13.344000 0.000000 ] xS
ep
end
